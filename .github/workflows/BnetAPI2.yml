name: bnetAPI2
on: push
env:
  ACCOUNT_REGION: "eu"
  GAMER_TAG: "Brodde#2647"
jobs:
  authenticate-bnet:
    runs-on: windows-latest
    outputs:
      access-token: ${{steps.bnet-auth.outputs.access-token}}
    steps:

      - name: Check out repo
        uses: actions/checkout@v2

      - name: Authenticate with BNet
        id: bnet-auth
        run: |

          $Url = "https://${{env.ACCOUNT_REGION}}.battle.net/oauth/token"
          $RequestBody = @{
              client_id  = '${{secrets.WOW_CLIENT_ID}}'
              client_secret  = '${{secrets.WOW_CLIENT_SECRET}}'
              grant_type = 'client_credentials'
          }
          $Result = Invoke-WebRequest -Uri $Url -Method Post -Body $RequestBody
          $Token = ConvertFrom-Json $Result.Content
          $access_token = $Token.access_token
          echo "::set-output name=access-token::$access_token"
  
      - name: Get Characters from Server
        id: fetch-characters
        run: |
        
          $AccessToken = "Bearer ${{steps.bnet-auth.outputs.access-token }}"
          $Region = ${{env.ACCOUNT_REGION}}
          $Tag = ${{env.GAMER_TAG}}
          $GAMER_PROFILE =[System.Web.HTTPUtility]::UrlEncode($Tag)

          $Url = "https://$Region.api.blizzard.com/d3/profile/$GAMER_PROFILE/?locale=en_US"
          Write-Host $Url
          Write-Host "accToken: $AccessToken"

          $Result = Invoke-WebRequest -Uri $Url -Method Get -Headers @{'Authorization' = $AccessToken}

          $ResultContent = ConvertFrom-Json $Result.Content
          $Heroes = $ResultContent.heroes

          $HeroesParsed = @()
          foreach($Hero in $Heroes){
              $HeroesParsed += [PSCustomObject] @{
                  Id = $Hero.id
                  ClassSlug = $Hero.classSlug

              }
          }
          $Matrix = ConvertTo-Json -Compress -InputObject $HeroesParsed
          Write-Host $Matrix
          echo "::set-output name=matrix::$Matrix"
  
  job2:
    needs: authenticate-bnet
    runs-on: windows-latest
    strategy:
      matrix: ${{fromJson(needs.authenticate-bnet.outputs.matrix)}}
    steps:
      - run: echo ${{ matrix.Id }} ${{ matrix.ClassSlug }}
